@using InsuranceWebsite.Models
@using InsuranceSocialNetworkDTO.Chat;
@model ChatViewModel

<link href="~/Content/bookpost/css/messages.css" rel="stylesheet">

@Html.HiddenFor(i=>i.Chat.ID_Chat, new { id="chatId" })
@Html.HiddenFor(i => i.Profile.ID_User, new { id = "userId" })
@Html.HiddenFor(i => i.Profile.FirstName, new { id = "firstName" })
@Html.HiddenFor(i => i.Profile.LastName, new { id = "lastName" })

<style>

    .notes-content {
    }

    .note {
        background-color: #00C1DE;
        padding: 10px 20px;
        color: #fff;
        margin-bottom:2px;
        display:grid;
        position: relative;
        width:100%;
    }

    .note-icon
    {
        position:absolute;
        right: 18px;
        padding-top: 12px;
    }

</style>

<div class="panel panel-body post panel-shadow animated fadeInUp" style="margin-bottom:2px;max-height:80px;padding:10px 15px;">
    <div class="pull-left image">
        @*<a href="@Url.Action("ProfileInfo", "Home", new { id = chat.ID })" style="padding: 0px; text-align: -webkit-center;">*@
        @if (null == Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ProfilePhoto || Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ProfilePhoto.Length == 0)
        {
            <img class="thumb media-object" src="~/Content/images/no_photo_img.jpg" alt="" style="border-radius:100px;max-height:60px;border: 2px solid #EDEFF0;">
        }
        else
        {
            <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.Chat.ChatMemberProfile.FirstOrDefault(i=>i.ID_User != Model.Profile.ID_User).ProfilePhoto))" class="thumb media-object" style="border-radius:100px;max-height:60px;border: 2px solid #EDEFF0;">
        }
        @*</a>*@
    </div>
    <div style="float:left; padding:0px 15px; width: calc(100% - 268px);">
        <div style="color:#4B5C66;font-weight:bold;font-size:14px;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).FirstName @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).LastName</div>
        @if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).CompanyName))
        {
            <div style="color:#939DA3;font-size:11px;font-weight:bold;">-</div>
        }
        else
        {
            <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).CompanyName</div>
        }

        @if (!Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ID_District.HasValue)
        {
            if (!Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ID_County.HasValue)
            {
                if (!Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ID_Parish.HasValue)
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">-</div>
                }
                else
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Parish.Name</div>

                }
            }
            else
            {
                if (!Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ID_Parish.HasValue)
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County.Name</div>
                }
                else
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Parish.Name, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County.Name</div>

                }
            }
        }
        else
        {
            if (!Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ID_County.HasValue)
            {
                if (!Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ID_Parish.HasValue)
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District</div>
                }
                else
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Parish.Name, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District.Name</div>

                }
            }
            else
            {
                if (!Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ID_Parish.HasValue)
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County.Name, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District.Name</div>

                }
                else
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Parish.Name, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County.Name, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District.Name</div>

                }
            }
        }
    </div>
    <div style="float:right; padding-top:18px; display:table; font-size:13px; font-weight:bold;">
        <div style="display:table-cell;vertical-align:middle;padding:0px 10px;">
            <span style="color:#00C1DE;">@Resources.Resources.Linked</span>
        </div>
    </div>
</div>

<div class="panel panel-white post panel-shadow animated fadeInUp" style="margin-bottom:2px;height:80px;background-color:#EDEFF0;">
    <div class="post-heading" style="padding: 10px 15px;vertical-align:middle;">
        <div class="pull-left" style="padding-top:18px;">
            <a href="@Url.Action("MarkChatAsUnread", new { id = Model.Chat.ID })">
                <span style="font-size:14px;font-weight:bold;color:#4B5C66;padding-right:20px;">@Resources.Resources.MarkAsNotRead</span>
            </a>
            @if (Model.Chat.NotificationsEnabled)
            {
                <a href="@Url.Action("DisableChatNotifications", new { id = Model.Chat.ID })">
                    <span style="font-size:14px;font-weight:bold;color:#4B5C66;">@Resources.Resources.DoNotReceiveNotifications</span>
                </a>
            }
            else
            {
                <a href="@Url.Action("EnableChatNotifications", new { id = Model.Chat.ID })">
                    <span style="font-size:13px;font-weight:bold;color:#4B5C66;">@Resources.Resources.ReceiveNotifications</span>
                </a>
            }
        </div>
        <div style="float:right; display:table; font-size:11px; font-weight:bold;padding-top: 10px;">
            <div style="display:table-cell;cursor:pointer;">
                <img src="~/Content/icons/icons_mensagens_rede_social_falar_seguros_AF.png" class="" style="border:none;height:35px; width:35px;" onclick="ConfirmDeleteChat(@Model.Chat.ID)" />
            </div>
        </div>
    </div>
</div>

<div id="topDiscussion" class="col-inside-lg decor-default" style="width:100%;max-height: calc(100vh - 265px - @(Model.Chat.ChatNote.Count * 57)px);overflow:auto;">
    
    <div class="chat-body" id="discussion" style="">
        @foreach (ChatMessageDTO message in Model.Chat.ChatMessage)
        {
            if (message.ID_User == Model.Profile.ID_User)
            {
                <div class="answer right">
                    @*<div class="avatar">
                        @if (null == Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User == Model.Profile.ID_User).ProfilePhoto || Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User == Model.Profile.ID_User).ProfilePhoto.Length == 0)
                        {
                            <img class="" src="~/Content/images/no_photo_img.jpg" alt="" style="max-width: 25px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 5px;">
                        }
                        else
                        {
                            <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.Chat.ChatMemberProfile.FirstOrDefault(i=>i.ID_User == Model.Profile.ID_User).ProfilePhoto))" class="" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">
                        }
                    </div>*@
                    <div class="text">
                        @if (message.IsImage)
                        {
                            <img src="@message.FileStream" />
                        }
                        else if (message.IsFile)
                        {
                            <a href="@message.FileStream" download="file"></a>
                        }
                        else
                        {
                            @message.Text
                        }
                    </div>
                    @if (DateTime.Now.Subtract(message.CreateDate).TotalMinutes < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalSeconds, 0) @Resources.Resources.SecondsAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalHours < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalMinutes, 0) @Resources.Resources.MinutesAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalHours, 0) @Resources.Resources.HoursAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 5)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalDays, 0) @Resources.Resources.DaysAgo</div>
                    }
                    else
                    {
                        <div class="time">@message.CreateDate.ToShortDateString()</div>
                    }
                </div>
            }
            else
            {
                <div class="answer left">
                    <div class="avatar">
                        @if (null == Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ProfilePhoto || Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ProfilePhoto.Length == 0)
                        {
                            <img class="thumb media-object" src="~/Content/images/no_photo_img.jpg" alt="" style="max-width: 25px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 5px;">
                        }
                        else
                        {
                            <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.Chat.ChatMemberProfile.FirstOrDefault(i=>i.ID_User != Model.Profile.ID_User).ProfilePhoto))" class="thumb media-object" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">
                        }
                        @*<img src="~/Content/images/no_photo_img.jpg" alt="User name" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">*@
                        @*<div class="status offline"></div>*@
                    </div>
                    <div class="text">
                        @if (message.IsImage)
                        {
                            <img src="@message.FileStream" />
                        }
                        else if (message.IsFile)
                        {

                        }
                        else
                        {
                            @message.Text
                        }
                    </div>
                    @if (DateTime.Now.Subtract(message.CreateDate).TotalMinutes < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalSeconds, 0) @Resources.Resources.SecondsAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalHours < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalMinutes, 0) @Resources.Resources.MinutesAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalHours, 0) @Resources.Resources.HoursAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 5)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalDays, 0) @Resources.Resources.DaysAgo</div>
                    }
                    else
                    {
                        <div class="time">@message.CreateDate.ToShortDateString()</div>
                    }
                </div>
            }
        }

        <div class="answer-add" id="sendMessageDiv" style="visibility:hidden;">
        </div>
    </div>
</div>

<div class="notes-content">
    @foreach (var note in Model.Chat.ChatNote)
    {
        <div style="display:flex;">
            <div class="note">
                <span style="font-size:10px;">@Resources.Resources.Note</span>@note.Note
            </div>
            <div class="note-icon">
                <a id="deleteNoteButton" href="@Url.Action("DeleteNote", "Home", new { id = note.ID, idC=Model.Chat.ID })" style="padding: 3px 5px">
                    <img src="~/Content/icons/icons_mensagens_rede_social_falar_seguros_AF3.png" class="icon-normal" />
                </a>
            </div>
        </div>
    }
</div>

<div class="col-inside-lg decor-default" style="width:100%; margin-top:0px;">
    <textarea placeholder="@Resources.Resources.WriteMessageOrAttachAnArchive" rows="1" class="form-control input-lg p-text-area" id="message" name="message" style="resize:none;"></textarea>
    <img id="imgPlaceholder"  alt="" style="visibility:hidden;position:absolute" />
    <div class="panel-footer" style="border-top: 0px; padding: 10px 10px;">
        <button class="btn btn-info pull-right" id="sendmessage" style="font-weight:bold;">@Resources.Resources.Send</button>
        <ul class="nav nav-pills">
            @*<li>
                <input type='file' id="imgUpload" style="visibility:hidden;position:absolute" name="imgUpload" />
                <a href="javascript:$('#imgUpload').click()" style="padding: 3px 5px">
                    <img src="~/Content/icons/home_page_rede_social_falar_seguros_AF110.png" class="icon-normal" />
                </a>
            </li>
            <li>
                <input type='file' id="fileUpload" style="visibility:hidden;position:absolute" name="fileUpload" />
                <a href="javascript:$('#fileUpload').click()" style="padding: 3px 5px">
                    <img src="~/Content/icons/home_page_rede_social_falar_seguros_AF111.png" class="icon-normal" />
                </a>
            </li>*@
            <li>
                <a id="newNoteButton" href="@Url.Action("CreateNote", "Home", new { idChat = Model.Chat.ID, idUser = Model.Profile.ID_User })" style="padding: 3px 5px">
                    <img src="~/Content/icons/icons_mensagens_rede_social_falar_seguros_AF9.png" class="icon-normal" />
                </a>
            </li>
        </ul>
    </div>
</div>

<div id="dialog-note" style="display: none; top:10%;">
</div>

<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>

<script type="text/javascript">
    $(function () {

        $("#dialog-note").dialog({
            title: '@Resources.Resources.CreateNewNote',
            autoOpen: false,
            resizable: false,
            width: 450,
            height: 150,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            position: { my: "center", at: "center", of: window },
            open: function (event, ui) {
                $(this).load(url);
            },
            buttons: {
            },
            close: function () {
            }
        });

        $("#newNoteButton").click(function (e) {
            e.preventDefault(); //use this or return false
            url = $(this).attr('href');
            //$(".ui-dialog-title").html("@Resources.Resources.EditCompany");
            $("#dialog-note").dialog('open');

            return false;
        });

        //$("#imgUpload").fileinput({
        //    allowedFileExtensions: ["jpg", "png", "gif", "jpeg"],
        //    maxImageWidth: 700,
        //    maxImageHeight: 700,
        //    resizePreference: 'height',
        //    maxFileCount: 1,
        //    resizeImage: true
        //});

        $('#topDiscussion').animate({
            scrollTop: $('#topDiscussion')[0].scrollHeight
        }, 2000);

        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.chatHub;
        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (name, message, connectionid) {
            // Add the message to the page.
            //$('#discussion').append('<li class="right clearfix"><span class="chat-img pull-right"><img src="img/Friends/guy-3.jpg" alt="User Avatar"></span>'
            //    + '<div class="chat-body clearfix"><div class="header"><strong class="primary-font">'
            //    + htmlEncode(name)
            //    + '</strong><small class="pull-right text-muted"><i class="fa fa-clock-o"></i> 13 mins ago</small></div><p>'
            //    + htmlEncode(message)
            //    + '</p></div></li>');
            //alert($('#messageListPanel').height());
            if (connectionid == $('#chatId').val()) {
                $('#sendMessageDiv').before('<div class="answer right">'
                    + '<div class="text">'
                    + htmlEncode(message)
                    + '</div><div class="time">now</div></div>');
                //$('#discussion').append('<div class="answer right"><div class="avatar">'
                //    + '<img src="~/Content/images/no_photo_img.jpg" alt="User name"><div class="status offline"></div></div>'
                //    + '<div class="name">'
                //    + htmlEncode(name)
                //    + '</div><div class="text">'
                //    + htmlEncode(message)
                //    + '</div><div class="time">5 min ago</div></div>');
                //alert($('#messageListPanel').height());

                $('#topDiscussion').scrollTop($('#topDiscussion')[0].scrollHeight);
            }
        };

        chat.client.addNewImageToPage = function (name, image, connectionid) {
            // Add the message to the page.
            //$('#discussion').append('<li class="right clearfix"><span class="chat-img pull-right"><img src="img/Friends/guy-3.jpg" alt="User Avatar"></span>'
            //    + '<div class="chat-body clearfix"><div class="header"><strong class="primary-font">'
            //    + htmlEncode(name)
            //    + '</strong><small class="pull-right text-muted"><i class="fa fa-clock-o"></i> 13 mins ago</small></div><p>'
            //    + htmlEncode(message)
            //    + '</p></div></li>');
            //alert($('#messageListPanel').height());
            if (connectionid == $('#chatId').val()) {
                $('#sendMessageDiv').before('<div class="answer right">'
                    + '<div class="text">'
                    + '<img src="' + image + '"/>'
                    + '</div><div class="time">now</div></div>');
                //$('#discussion').append('<div class="answer right"><div class="avatar">'
                //    + '<img src="~/Content/images/no_photo_img.jpg" alt="User name"><div class="status offline"></div></div>'
                //    + '<div class="name">'
                //    + htmlEncode(name)
                //    + '</div><div class="text">'
                //    + htmlEncode(message)
                //    + '</div><div class="time">5 min ago</div></div>');
                //alert($('#messageListPanel').height());

                $('#topDiscussion').scrollTop($('#topDiscussion')[0].scrollHeight);
            }
        };

        chat.client.addNewFileToPage = function (name, image, connectionid) {
            // Add the message to the page.
            //$('#discussion').append('<li class="right clearfix"><span class="chat-img pull-right"><img src="img/Friends/guy-3.jpg" alt="User Avatar"></span>'
            //    + '<div class="chat-body clearfix"><div class="header"><strong class="primary-font">'
            //    + htmlEncode(name)
            //    + '</strong><small class="pull-right text-muted"><i class="fa fa-clock-o"></i> 13 mins ago</small></div><p>'
            //    + htmlEncode(message)
            //    + '</p></div></li>');
            //alert($('#messageListPanel').height());
            if (connectionid == $('#chatId').val()) {
                $('#sendMessageDiv').before('<div class="answer right">'
                    + '<div class="text">'
                    + '<a href="' + image + '" download="file" ></a>'
                    + '</div><div class="time">now</div></div>');
                //$('#discussion').append('<div class="answer right"><div class="avatar">'
                //    + '<img src="~/Content/images/no_photo_img.jpg" alt="User name"><div class="status offline"></div></div>'
                //    + '<div class="name">'
                //    + htmlEncode(name)
                //    + '</div><div class="text">'
                //    + htmlEncode(message)
                //    + '</div><div class="time">5 min ago</div></div>');
                //alert($('#messageListPanel').height());

                $('#topDiscussion').scrollTop($('#topDiscussion')[0].scrollHeight);
            }
        };
        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                if ($.trim($('#message').val()) == '') {
                    return false;
                }
                // Call the Send method on the hub.
                chat.server.send($('#userId').val(), $('#message').val(), $('#chatId').val(), $('#firstName').val(), $('#lastName').val(), false, false);
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            });

            $('#message').keypress(function (e) {
                var key = e.which;
                if (key == 13)  // the enter key code
                {
                    if ($.trim($('#message').val()) == '')
                    {
                        return false;
                    }
                    $('#sendmessage').click();
                    return false;
                }
            });
        });

        $('#imgUpload').change(function () {
            var file = document.querySelector('#imgUpload').files[0];
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                chat.server.send($('#userId').val(), reader.result, $('#chatId').val(), $('#firstName').val(), $('#lastName').val(), true, false);
            }, false);

            if (file) {
                reader.readAsDataURL(file);
            }
        });

        $('#fileUpload').change(function () {
            var file = document.querySelector('#fileUpload').files[0];
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                chat.server.send($('#userId').val(), reader.result, $('#chatId').val(), $('#firstName').val(), $('#lastName').val(), false, true);
            }, false);

            if (file) {
                reader.readAsDataURL(file);
            }
        });
    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    //function previewFile() {
    //    var preview = document.querySelector('img[id=preview]');
    //    var file = document.querySelector('input[type=file]').files[0];
    //    var reader = new FileReader();

    //    reader.addEventListener("load", function () {
    //        preview.src = reader.result;
    //        //alert(reader.result);
    //    }, false);

    //    if (file) {
    //        reader.readAsDataURL(file);
    //    }

    //    chat.server.send($('#userId').val(), reader.result, $('#chatId').val(), $('#firstName').val(), $('#lastName').val(), true);
    //}

</script>
