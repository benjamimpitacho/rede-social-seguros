@using InsuranceWebsite.Models
@using InsuranceSocialNetworkDTO.Chat;
@model ChatViewModel

<link href="~/Content/bookpost/css/messages.css" rel="stylesheet">

@Html.HiddenFor(i=>i.Chat.ID_Chat, new { id="chatId" })
@Html.HiddenFor(i => i.Profile.ID_User, new { id = "userId" })
@Html.HiddenFor(i => i.Profile.FirstName, new { id = "firstName" })
@Html.HiddenFor(i => i.Profile.LastName, new { id = "lastName" })

<div class="col-inside-lg decor-default" style="width:100%">
    @*<h6>Chat with @string.Join(",", Model.Chat.ChatMember.Where(i => i.ID_User != Model.Profile.ID_User).Select(i => i.AspNetUsers.Email).ToArray())</h6>*@

    @*<ul>*@
    <div class="chat-body" id="discussion">
        <h6>@string.Format(Resources.Resources.ChatWith, Model.ChatOtherNames)</h6>
        @foreach (ChatMessageDTO message in Model.Chat.ChatMessage)
        {
            if (message.ID_User == Model.Profile.ID_User)
            {
                <div class="answer right">
                    <div class="avatar">
                        <img src="~/Content/images/no_photo_img.jpg" alt="User name">
                        @*<div class="status offline"></div>*@
                    </div>
                    <div class="name">
                        @message.AspNetUsers.Email
                    </div>
                    <div class="text">
                        @message.Text
                    </div>
                    @if (DateTime.Now.Subtract(message.CreateDate).TotalMinutes < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalSeconds, 0) @Resources.Resources.SecondsAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalHours < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalMinutes, 0) @Resources.Resources.MinutesAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalHours, 0) @Resources.Resources.HoursAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 5)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalDays, 0) @Resources.Resources.DaysAgo</div>
                    }
                    else
                    {
                        <div class="time">@message.CreateDate.ToShortDateString()</div>
                    }
                </div>
            }
            else
            {
                <div class="answer left">
                    <div class="avatar">
                        <img src="~/Content/images/no_photo_img.jpg" alt="User name">
                        @*<div class="status offline"></div>*@
                    </div>
                    <div class="name">
                        @message.AspNetUsers.Email
                    </div>
                    <div class="text">
                        @message.Text
                    </div>
                    @if (DateTime.Now.Subtract(message.CreateDate).TotalMinutes < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalSeconds, 0) @Resources.Resources.SecondsAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalHours < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalMinutes, 0) @Resources.Resources.MinutesAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalHours, 0) @Resources.Resources.HoursAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 5)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalDays, 0) @Resources.Resources.DaysAgo</div>
                    }
                    else
                    {
                        <div class="time">@message.CreateDate.ToShortDateString()</div>
                    }
                </div>
            }

            @*<li class="right clearfix">
                <span class="chat-img pull-right"><img src="img/Friends/guy-3.jpg" alt="User Avatar"></span>
                <div class="chat-body clearfix">
                    <div class="header">
                        <strong class="primary-font">
                            @message.AspNetUsers.Email
                        </strong><small class="pull-right text-muted"><i class="fa fa-clock-o"></i> 13 mins ago</small>
                    </div>
                    <p>
                        @message.Text
                    </p>
                </div>
            </li>*@
        }

        <div class="answer-add" id="sendMessageDiv">
            <input placeholder="Write a message" id="message">
            @*<span class="answer-btn answer-btn-1"></span>*@
            <span class="answer-btn answer-btn-2" id="sendmessage"></span>
        </div>
    @*</ul>*@

</div>
@*<div class="message-list-footer">
    <form>
        <textarea class="form-control input-lg p-text-area" rows="3" placeholder="Write a message..." id="message" style="resize: none;"></textarea>
    </form>
    <div class="panel-footer">
        <button type="button" class="btn btn-info pull-right" id="sendmessage">Send</button>
        <ul class="nav nav-pills">
            <li><a href="#"><i class="fa fa-camera"></i></a></li>
        </ul>
    </div>
</div>*@
</div>



<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>

<script type="text/javascript">
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.chatHub;
        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (name, message, connectionid) {
            //alert('message received...' + connectionid);
            // Add the message to the page.
            //$('#discussion').append('<li class="right clearfix"><span class="chat-img pull-right"><img src="img/Friends/guy-3.jpg" alt="User Avatar"></span>'
            //    + '<div class="chat-body clearfix"><div class="header"><strong class="primary-font">'
            //    + htmlEncode(name)
            //    + '</strong><small class="pull-right text-muted"><i class="fa fa-clock-o"></i> 13 mins ago</small></div><p>'
            //    + htmlEncode(message)
            //    + '</p></div></li>');
            //alert($('#messageListPanel').height());
            if (connectionid == $('#chatId').val()) {
                $('#sendMessageDiv').before('<div class="answer right"><div class="avatar">'
                    + '<img src="/Content/images/no_photo_img.jpg" alt="User name"></div></div>'
                    + '<div class="name">'
                    + htmlEncode(name)
                    + '</div><div class="text">'
                    + htmlEncode(message)
                    + '</div><div class="time"></div></div>');
                //$('#discussion').append('<div class="answer right"><div class="avatar">'
                //    + '<img src="~/Content/images/no_photo_img.jpg" alt="User name"><div class="status offline"></div></div>'
                //    + '<div class="name">'
                //    + htmlEncode(name)
                //    + '</div><div class="text">'
                //    + htmlEncode(message)
                //    + '</div><div class="time">5 min ago</div></div>');
                //alert($('#messageListPanel').height());
                $('#discussion')[0].scrollTop = $('#discussion')[0].scrollHeight;
                $('#messageListPanel')[0].scrollTop = $('#messageListPanel')[0].scrollHeight;
                //$('#discussion').scrollTop($('#discussion').scrollHeight);
                //$('#messageListPanel').scrollTop($('#messageListPanel').scrollHeight);
            }
        };
        // Get the user name and store it to prepend to messages.
        //$('#displayname').val(prompt('Enter your name:', ''));
        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                chat.server.send($('#userId').val(), $('#message').val(), $('#chatId').val(), $('#firstName').val(), $('#lastName').val());
                //alert('message sent...' + $('#chatId').val());
                @*chat.server.sendPrivateMessage($('#displayname').val(), $('#message').val(), '@Model.Chat.ID_Chat');*@
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            });

            $('#message').keypress(function (e) {
                var key = e.which;
                if (key == 13)  // the enter key code
                {
                    $('#sendmessage').click();
                    return false;
                }
            });
        });
    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
</script>
