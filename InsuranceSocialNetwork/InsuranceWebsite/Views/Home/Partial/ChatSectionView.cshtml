@using InsuranceWebsite.Models
@using InsuranceSocialNetworkDTO.Chat;
@model ChatViewModel

<link href="~/Content/bookpost/css/messages.css" rel="stylesheet">

@Html.HiddenFor(i=>i.Chat.ID_Chat, new { id="chatId" })
@Html.HiddenFor(i => i.Profile.ID_User, new { id = "userId" })
@Html.HiddenFor(i => i.Profile.FirstName, new { id = "firstName" })
@Html.HiddenFor(i => i.Profile.LastName, new { id = "lastName" })

<div class="panel panel-body post panel-shadow animated fadeInUp" style="margin-bottom:2px;max-height:80px;padding:10px 15px;">
    <div class="pull-left image">
        @*<a href="@Url.Action("ProfileTimeline", "Home", new { id = chat.ID })" style="padding: 0px; text-align: -webkit-center;">*@
        @if (null == Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ProfilePhoto || Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ProfilePhoto.Length == 0)
        {
            <img class="thumb media-object" src="~/Content/images/no_photo_img.jpg" alt="" style="border-radius:100px;max-height:60px;border: 2px solid #EDEFF0;">
        }
        else
        {
            <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.Chat.ChatMemberProfile.FirstOrDefault(i=>i.ID_User != Model.Profile.ID_User).ProfilePhoto))" class="thumb media-object" style="border-radius:100px;max-height:60px;border: 2px solid #EDEFF0;">
        }
        @*</a>*@
    </div>
    <div style="float:left; padding:0px 15px; width: calc(100% - 268px);">
        <div style="color:#4B5C66;font-weight:bold;font-size:14px;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).FirstName @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).LastName</div>
        @if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).CompanyName))
        {
            <div style="color:#939DA3;font-size:11px;font-weight:bold;">-</div>
        }
        else
        {
            <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).CompanyName</div>
        }

        @if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District))
        {
            if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County))
            {
                if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Locality))
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">-</div>
                }
                else
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Locality, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County</div>

                }
            }
            else
            {
                if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Locality))
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County</div>
                }
                else
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Locality, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County</div>

                }
            }
        }
        else
        {
            if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County))
            {
                if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Locality))
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District</div>
                }
                else
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Locality, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District</div>

                }
            }
            else
            {
                if (string.IsNullOrEmpty(Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Locality))
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District</div>

                }
                else
                {
                    <div style="color:#939DA3;font-size:11px;font-weight:bold;">@Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).Locality, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).County, @Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).District</div>

                }
            }
        }
    </div>
    <div style="float:right; padding-top:18px; display:table; font-size:13px; font-weight:bold;">
        <div style="display:table-cell;vertical-align:middle;padding:0px 10px;">
            <span style="color:#00C1DE;">@Resources.Resources.Linked</span>
        </div>
    </div>
</div>

<div class="panel panel-white post panel-shadow animated fadeInUp" style="margin-bottom:2px;height:70px;background-color:#EDEFF0;">
    <div class="post-heading" style="padding: 10px 15px;vertical-align:middle;">
        <div class="pull-left" style="padding-top:12px;">
            <span style="font-size:13px;font-weight:bold;color:#4B5C66;padding-right:20px;">@Resources.Resources.MarkAsNotRead</span>
            <span style="font-size:13px;font-weight:bold;color:#4B5C66;">@Resources.Resources.DoNotReceiveNotifications</span>
        </div>
        <div style="float:right; display:table; font-size:11px; font-weight:bold;">
            <div style="display:table-cell;">
                <img src="~/Content/icons/icons_mensagens_rede_social_falar_seguros_AF.png" class="" style="border:none;height:40px; width:40px;" />
            </div>
        </div>
    </div>
</div>

<div class="col-inside-lg decor-default" style="width:100%">
    @*<h6>Chat with @string.Join(",", Model.Chat.ChatMember.Where(i => i.ID_User != Model.Profile.ID_User).Select(i => i.AspNetUsers.Email).ToArray())</h6>*@

    @*<ul>*@
    <div class="chat-body" id="discussion">
        @foreach (ChatMessageDTO message in Model.Chat.ChatMessage)
        {
            if (message.ID_User == Model.Profile.ID_User)
            {
                <div class="answer right">
                    <div class="avatar">
                        @if (null == Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User == Model.Profile.ID_User).ProfilePhoto || Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User == Model.Profile.ID_User).ProfilePhoto.Length == 0)
                        {
                            <img class="" src="~/Content/images/no_photo_img.jpg" alt="" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">
                        }
                        else
                        {
                            <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.Chat.ChatMemberProfile.FirstOrDefault(i=>i.ID_User == Model.Profile.ID_User).ProfilePhoto))" class="" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">
                        }
                        @*<img src="~/Content/images/no_photo_img.jpg" alt="User name" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">*@
                        @*<div class="status offline"></div>*@
                    </div>
                    <div class="text">
                        @message.Text
                    </div>
                    @if (DateTime.Now.Subtract(message.CreateDate).TotalMinutes < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalSeconds, 0) @Resources.Resources.SecondsAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalHours < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalMinutes, 0) @Resources.Resources.MinutesAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalHours, 0) @Resources.Resources.HoursAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 5)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalDays, 0) @Resources.Resources.DaysAgo</div>
                    }
                    else
                    {
                        <div class="time">@message.CreateDate.ToShortDateString()</div>
                    }
                </div>
            }
            else
            {
                <div class="answer left">
                    <div class="avatar">
                        @if (null == Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ProfilePhoto || Model.Chat.ChatMemberProfile.FirstOrDefault(i => i.ID_User != Model.Profile.ID_User).ProfilePhoto.Length == 0)
                        {
                            <img class="thumb media-object" src="~/Content/images/no_photo_img.jpg" alt="" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">
                        }
                        else
                        {
                            <img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.Chat.ChatMemberProfile.FirstOrDefault(i=>i.ID_User != Model.Profile.ID_User).ProfilePhoto))" class="thumb media-object" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">
                        }
                        @*<img src="~/Content/images/no_photo_img.jpg" alt="User name" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;">*@
                        @*<div class="status offline"></div>*@
                    </div>
                    <div class="text">
                        @message.Text
                    </div>
                    @if (DateTime.Now.Subtract(message.CreateDate).TotalMinutes < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalSeconds, 0) @Resources.Resources.SecondsAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalHours < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalMinutes, 0) @Resources.Resources.MinutesAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 1)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalHours, 0) @Resources.Resources.HoursAgo</div>
                    }
                    else if (DateTime.Now.Subtract(message.CreateDate).TotalDays < 5)
                    {
                        <div class="time">@Math.Round(DateTime.Now.Subtract(message.CreateDate).TotalDays, 0) @Resources.Resources.DaysAgo</div>
                    }
                    else
                    {
                        <div class="time">@message.CreateDate.ToShortDateString()</div>
                    }
                </div>
            }

            @*<li class="right clearfix">
                <span class="chat-img pull-right"><img src="img/Friends/guy-3.jpg" alt="User Avatar"></span>
                <div class="chat-body clearfix">
                    <div class="header">
                        <strong class="primary-font">
                            @message.AspNetUsers.Email
                        </strong><small class="pull-right text-muted"><i class="fa fa-clock-o"></i> 13 mins ago</small>
                    </div>
                    <p>
                        @message.Text
                    </p>
                </div>
            </li>*@
        }

        <div class="answer-add" id="sendMessageDiv" style="visibility:hidden;">
            @*<input placeholder="Write a message" id="message">
            <span class="answer-btn answer-btn-2" id="sendmessage"></span>*@
        </div>
    </div>
</div>
<div class="col-inside-lg decor-default" style="width:100%; margin-top:5px;">
    <textarea placeholder="@Resources.Resources.WriteMessageOrAttachAnArchive" rows="1" class="form-control input-lg p-text-area" id="message" name="message" style="resize:none;"></textarea>
    <img id="imgPlaceholder" src="#" alt="" style="visibility:hidden;position:absolute" />
    <div class="panel-footer" style="border-top: 0px; padding: 10px 10px;">
        <button class="btn btn-info pull-right" id="sendmessage" style="font-weight:bold;">@Resources.Resources.Send</button>
        <ul class="nav nav-pills">
            <li>
                <input type='file' id="imgUpload" style="visibility:hidden;position:absolute" name="imgUpload" />
                <a href="javascript:$('#imgUpload').click()" style="padding: 3px 5px">
                    <img src="~/Content/icons/home_page_rede_social_falar_seguros_AF110.png" class="icon-normal" />
                </a>
            </li>
            <li>
                <input type='file' id="fileUpload" style="visibility:hidden;position:absolute" name="fileUpload" />
                <a href="javascript:$('#fileUpload').click()" style="padding: 3px 5px">
                    <img src="~/Content/icons/home_page_rede_social_falar_seguros_AF111.png" class="icon-normal" />
                </a>
            </li>
        </ul>
    </div>
</div>


<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>

<script type="text/javascript">
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.chatHub;
        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (name, message, connectionid) {
            // Add the message to the page.
            //$('#discussion').append('<li class="right clearfix"><span class="chat-img pull-right"><img src="img/Friends/guy-3.jpg" alt="User Avatar"></span>'
            //    + '<div class="chat-body clearfix"><div class="header"><strong class="primary-font">'
            //    + htmlEncode(name)
            //    + '</strong><small class="pull-right text-muted"><i class="fa fa-clock-o"></i> 13 mins ago</small></div><p>'
            //    + htmlEncode(message)
            //    + '</p></div></li>');
            //alert($('#messageListPanel').height());
            if (connectionid == $('#chatId').val()) {
                $('#sendMessageDiv').before('<div class="answer right"><div class="avatar">'
                    + '<img src="/Content/images/no_photo_img.jpg" alt="User name" style="max-width: 40px;border-radius: 50px;border: 1px solid #939DA3;margin-bottom: 10px;"></div>'
                    + '<div class="text">'
                    + htmlEncode(message)
                    + '</div><div class="time">now</div></div>');
                //$('#discussion').append('<div class="answer right"><div class="avatar">'
                //    + '<img src="~/Content/images/no_photo_img.jpg" alt="User name"><div class="status offline"></div></div>'
                //    + '<div class="name">'
                //    + htmlEncode(name)
                //    + '</div><div class="text">'
                //    + htmlEncode(message)
                //    + '</div><div class="time">5 min ago</div></div>');
                //alert($('#messageListPanel').height());
                $('#discussion')[0].scrollTop = $('#discussion')[0].scrollHeight;
                $('#messageListPanel')[0].scrollTop = $('#messageListPanel')[0].scrollHeight;
                //$('#discussion').scrollTop($('#discussion').scrollHeight);
                //$('#messageListPanel').scrollTop($('#messageListPanel').scrollHeight);
            }
        };
        // Get the user name and store it to prepend to messages.
        //$('#displayname').val(prompt('Enter your name:', ''));
        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                chat.server.send($('#userId').val(), $('#message').val(), $('#chatId').val(), $('#firstName').val(), $('#lastName').val());
                //alert('message sent...' + $('#chatId').val());
                @*chat.server.sendPrivateMessage($('#displayname').val(), $('#message').val(), '@Model.Chat.ID_Chat');*@
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            });

            $('#message').keypress(function (e) {
                var key = e.which;
                if (key == 13)  // the enter key code
                {
                    $('#sendmessage').click();
                    return false;
                }
            });
        });
    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
</script>
