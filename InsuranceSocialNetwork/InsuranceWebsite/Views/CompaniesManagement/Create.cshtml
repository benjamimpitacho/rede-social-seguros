@using InsuranceWebsite.Models
@using MVCGrid.Web
@model CompanyModelObject

@{
    ViewBag.Title = Resources.Resources.HomePageTitle;
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

@Scripts.Render("~/bundles/jqueryval")

<script>
    $.validator.setDefaults({
        ignore: ".ignore"
    });
    //$("#createCompanyForm").validate({
    //    ignore: []
    //});

    //$.validator.setDefaults({
    //    ignore: ":reset, :image, [disabled]"
    //});
</script>



<style>
    .panel {
        margin-bottom: 4px !important;
    }

    .main-photo {
        max-width: 120px;
        max-height: 120px;
        border-radius: 100px;
        border: 3px solid #E3E6E8;
    }

    .profile-icon {
        max-width: 65px;
    }

    .profile-info {
        font-size: 12px;
    }

    .data-row {
        display: flex;
        margin: 0px 0px 2px;
        height: 34px;
    }

    .label-control {
        border: none;
        box-shadow: none;
        border-radius: 0px;
    }

    .profile-label {
        font-size: 12px !important;
        font-weight: bold !important;
        padding: 10px !important;
    }

    .label-control {
        background-color: #F6F8F7;
    }

    .form-control input {
        width: 100% !important;
        border: 0px !important;
        background-color: transparent !important;
    }

    .profile-textarea {
        background-color: #F6F8F7;
        border-radius: 0px;
    }

    .btn-blue {
        background-color: #00C1DE;
        color: #fff;
        font-weight: bold;
        width: 100px;
        padding: 10px;
    }

    .btn-darkblue {
        background-color: #4B5C66;
        color: #fff;
        font-weight: bold;
        width: 100px;
        padding: 10px;
    }
</style>

<div id="dialog-form" title="@Resources.Resources.CreateNewCompany">

    @using (Html.BeginForm("Create", "CompaniesManagement", FormMethod.Post, new { id= "createCompanyForm", @class = "form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken();
        @Html.HiddenFor(i => i.ID, new { @class="ignore" });
        @Html.HiddenFor(i => i.CompanyType, new { @class = "ignore" });

        <ul class="nav nav-tabs nav-tabs-custom-colored tabs-iconized" id="tabsHeader">
            <li class="active">
                <a href="#info-tab" data-toggle="tab" aria-expanded="false">
                    <i class="fa fa-user"></i> @Resources.Resources.CompanyData
                </a>
            </li>
            <li class="">
                <a href="#contacts-tab" data-toggle="tab" aria-expanded="false">
                    <i class="fa fa-gear"></i> @Resources.Resources.Contacts
                </a>
            </li>
            <li class="">
                <a href="#payments-tab" data-toggle="tab" aria-expanded="false">
                    <i class="fa fa-gear"></i> @Resources.Resources.Payments
                </a>
            </li>
        </ul>

        <div class="tab-content profile-page">
            <div class="tab-pane profile active" id="info-tab">
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.Name</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.Name)</label>                        
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.NIF</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.NIF)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row" style="height: 55px;">
                        <span class="data-name profile-label">@Resources.Resources.BusinessName</span>
                        <label class="form-control label-control profile-label" style="height: 55px;">@Html.TextBoxFor(i => i.BusinessName, new { style = "height: 34px;" })</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.Services</span>
                        <label class="form-control label-control profile-label" style="padding: 3px !important;">@Html.DropDownListFor(m => m.ID_Service, Model.ServiceList, new { @class = "text ui-widget-content ui-corner-all", @style = "color:#777;min-height:28px;width:100%;", @placeholder = Resources.Resources.Services, id = "serviceList" })</label>
                        @Html.HiddenFor(i => i.ID_Service, new { id = "serviceId" })
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.Description</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.Description)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.Address</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.Address)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.District</span>
                        <label class="form-control label-control profile-label" style="padding: 3px !important;">@Html.DropDownListFor(m => m.ID_District, Model.DistrictList, new { @class = "text ui-widget-content ui-corner-all", @style = "color:#777;min-height:28px;width:100%;", @placeholder = Resources.Resources.District, id = "districtList" })</label>
                        @Html.HiddenFor(i => i.ID_District, new { id = "districtId" })
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.County</span>
                        <label class="form-control label-control profile-label" style="padding: 3px !important;">@Html.DropDownListFor(m => m.ID_County, Model.CountyList, new { @class = "text ui-widget-content ui-corner-all", @style = "color:#777;min-height:28px;width:100%;", @placeholder = Resources.Resources.Location, id = "countyList" })</label>
                        @Html.HiddenFor(i => i.ID_County, new { id = "countyId" })
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.OfficialAgent</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.OfficialAgent)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.OfficialPartner</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.OfficialPartner)</label>
                        
                    </p>
                </div>
                <div>
                    <p>
                        @Html.ValidationMessageFor(i => i.Name)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.NIF)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.BusinessName)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.Address)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.OfficialAgent)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.OfficialPartner)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.Description)
                    </p>
                </div>
            </div>
            <div class="tab-pane settings" id="contacts-tab">
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.ContactEmail</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.ContactEmail)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.Telephone_1</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.Telephone_1)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.Telephone_2</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.Telephone_2)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.MobilePhone_1</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.MobilePhone_1)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.MobilePhone_2</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.MobilePhone_2)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.Website</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.Website)</label>
                    </p>
                </div>
                <div>
                    <p>
                        @Html.ValidationMessageFor(i => i.ContactEmail)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.Telephone_1)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.Telephone_2)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.MobilePhone_1)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.MobilePhone_2)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.Website)
                    </p>
                </div>
            </div>
            <div class="tab-pane settings" id="payments-tab">
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.PaymentType</span>
                        <label class="form-control label-control profile-label" style="padding: 3px !important;">@Html.DropDownListFor(m => m.ID_PaymentType, Model.PaymentTypeList, new { @class = "text ui-widget-content ui-corner-all", @style = "color:#777;min-height:28px;width:100%;", @placeholder = Resources.Resources.PaymentType, id = "paymentTypeList" })</label>
                        @Html.HiddenFor(i => i.ID_PaymentType, new { id = "paymentTypeId" })
                    </p>
                </div>
                <div id="ibanSection">
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.IBAN</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.IBAN)</label>

                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label">@Resources.Resources.Value</span>
                        <label class="form-control label-control profile-label">@Html.TextBoxFor(i => i.Value)</label>
                    </p>
                </div>
                <div>
                    <p class="data-row">
                        <span class="data-name profile-label" style="width:40em;">@Resources.Resources.CreateNewPayment?</span>
                        <label class="form-control label-control profile-label" style="font-weight:bold;">@Html.CheckBoxFor(i => i.CreatePayment)</label>
                    </p>
                </div>
                <div>
                    <p>
                        @Html.ValidationMessageFor(i => i.IBAN)
                    </p><p>
                        @Html.ValidationMessageFor(i => i.Value)
                    </p>
                </div>
            </div>
        </div>
        <div>
            <input id="submitButton" type="submit" value="@Resources.Resources.Save" />
        </div>
    }
</div>

<script>

    $(document).ready(function () {

        

        //$("#submitButton").click(function () {
            //$("#createCompanyForm").validate({
            //    ignore: ""
            //});
            //if ($("#createCompanyForm").valid()) {
            //    alert('valid')
            //    $("#createCompanyForm").submit();
            //}
            //else
            //{ alert('invalid');}
            //$("#createCompanyForm").submit();
        //});

        //$.validator.setDefaults({
        //    ignore: ""
        //});

        //$("#createCompanyForm").submit(function () {
        //    //alert($("#createCompanyForm .input-validation-error").closest(".tab-pane").get(0).id);
        //    //$('#tabs').tabs('select', $('#tabs div[class="tab-pane"]').parent().index());
        //    //$("#tabsHeader").tabs({ active: 2 });/*"active", $("#createCompanyForm .input-validation-error").closest(".tab-pane").get(0).id);*/
        //});

        //$("#createCompanyForm").submit(function (e) {
        //    //alert("submit 2");
        //});

        $.validator.addMethod('date', function (value, element) {
            if (this.optional(element)) {
                return true;
            }

            var ok = true;
            try {
                $.datepicker.parseDate('dd/mm/yy', value);
            }
            catch (err) {
                ok = false;
            }
            return ok;
        });

        $('.date-picker').datepicker({
            dateFormat: 'dd/mm/yy'
        });

        //$('#countyList').hide();
        $('#countyList').prop('disabled', true);
        var ddlCounties = $("#countyList"); //dropdownlist for counties

        $("#districtList").change(function () {
            var selectedItem = $("#districtList").val(); //dropdownlist for states

            //$('#countyList').show();
            $('#countyList').prop('disabled', false);

            $.ajax({
                cache: false,
                type: "GET",
                url: '@Url.Action("GetCountiesByDistrict", "Home")',
                data: { "districtId": selectedItem },
                success: function (data) {
                    ddlCounties.html('')
                    $.each(data, function (id, option) {
                        ddlCounties.append($('<option></option>').val(option.Value).html(option.Text));
                    });
                },

                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve counties.');
                }
            });

        });

        $("#paymentTypeList").change(function () {
            var selectedItem = $("#paymentTypeList").val();

            if (selectedItem == 4) {
                $('#ibanSection :input').attr('disabled', false);
            }
            else {
                $('#ibanSection :input').attr('disabled', true);
            }
        });

    } );

</script>